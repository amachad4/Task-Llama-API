// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230426221356_ThirdCreate")]
    partial class ThirdCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Domain.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CategoryLkpId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("StatusLkpId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("category_lkp_id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("deadline")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("status_lkp_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("activities");
                });

            modelBuilder.Entity("Domain.CategoryLkp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("category_lkp");
                });

            modelBuilder.Entity("Domain.StatusLkp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("status_lkp");
                });

            modelBuilder.Entity("Domain.SubActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("StatusLkpId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("activity_id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("status_lkp_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("activity_id");

                    b.ToTable("sub_activities");
                });

            modelBuilder.Entity("Domain.Activity", b =>
                {
                    b.HasOne("Domain.CategoryLkp", "CategoryLkp")
                        .WithMany()
                        .HasForeignKey("CategoryLkpId");

                    b.HasOne("Domain.StatusLkp", "StatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId");

                    b.Navigation("CategoryLkp");

                    b.Navigation("StatusLkp");
                });

            modelBuilder.Entity("Domain.SubActivity", b =>
                {
                    b.HasOne("Domain.StatusLkp", "StatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId");

                    b.HasOne("Domain.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("activity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("StatusLkp");
                });
#pragma warning restore 612, 618
        }
    }
}
